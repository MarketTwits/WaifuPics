name: Generate release APK and publish to GitHub releases

on:
  push:
    branches:
      - NK/03-migrate-kmp
  workflow_dispatch:

jobs:
  apk:
    name: Generate and publish release APK
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Extract versionName from `libs.versions.toml`
      - name: Extract version number
        id: version
        run: |
          VERSION_NAME=$(grep 'versionName =' gradle/libs.versions.toml | cut -d '"' -f 2)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      # Build unsigned release APK
      - name: Build unsigned release APK
        run: ./gradlew :modules:instances:app:assembleRelease --stacktrace

      # Use r0adkll/sign-android-release to sign the APK
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: modules/instances/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      # Rename the signed APK
      - name: Rename signed APK
        run: |
          mv "modules/instances/app/build/outputs/apk/release/app-release.apk" \
          "modules/instances/app/build/outputs/apk/release/AppName-${{ env.VERSION_NAME }}.apk"

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION_NAME }}
          release_name: "Release ${{ env.VERSION_NAME }}"
          body: "Release of version ${{ env.VERSION_NAME }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}